---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name:  &app kometa

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: plex
      namespace: media
    - name: volsync
      namespace: storage

  values:
    controllers:
      4k-movies:
        type: &type cronjob
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob: &cronjob
          schedule: "30 4 * * *"
          timeZone: &timeZone ${TIME_ZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        initContainers: &init_container
          git-sync:
            env:
              GITSYNC_REPO: https://github.com/jmxd/Kometa/
              GITSYNC_REF: main
              GITSYNC_PERIOD: 10s # 1 day
              GITSYNC_ROOT: /git
              GITSYNC_DESTINATION: /config/overlays
              GITSYNC_DEPTH: 1
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            restartPolicy: Always
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              readOnlyRootFilesystem: false
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
        containers:
          app: &container_app
            image:
              repository: kometateam/kometa
              tag: nightly@sha256:fca7ed9a867e5e21c513eaeef5450c7debc9ddbcaf8c5f66ce50e3eeb2e02488
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "4k-Movies";
            env:
              TZ: *timeZone
            envFrom:
              - secretRef:
                  name: kometa-secret
            resources:
              requests:
                cpu: 2000m
                memory: 4096M
              limits:
                cpu: 2000m
                memory: 8192M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
      standard-movies:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "0 5 * * *"
        initContainers: *init_container
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Movies"
      4k-tv:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "30 5 * * *"
        initContainers: *init_container
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "4k-TV Shows"
      standard-tv:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "0 6 * * *"
        initContainers: *init_container
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "TV Shows"
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 140
        fsGroup: 150
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        existingClaim: *app
      config-file:
        type: configMap
        name: kometa-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      custom:
        type: configMap
        name: kometa-custom
        globalMounts:
          - path: /config/custom
      fonts:
        type: configMap
        name: kometa-fonts
        globalMounts:
          - path: /config/fonts
      assets:
        existingClaim: plex-posters
        globalMounts:
        - path: /assets
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      git:
        type: emptyDir
        globalMounts:
          - path: /git
