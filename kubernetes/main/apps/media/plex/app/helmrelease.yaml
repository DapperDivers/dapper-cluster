---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.1.9057-af5eaea7a@sha256:5926b77196bb7c9f75b52f431d0483abea0fef1f576b7201592b385449201456
            env:
              TZ: ${TIME_ZONE}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN_MEDIA}:443,http://10.100.0.24:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.1.0/24
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 150
        fsGroup: 140
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: *app
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        loadBalancerIP: &ip ${UNIFI_VIP_GATEWAY}
        annotations:
          io.cilium/lb-ipam-ips: *ip
        ports:
          http:
            port: 32400
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN_MEDIA}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        className: external
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN_MEDIA}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: plex
        globalMounts:
           - path: /config/Library/Application Support/Plex Media Server

      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: openmediavault-used.manor
        path: /Used
        globalMounts:
          - path: /media
